package packet;

import java.util.ArrayList;
import java.util.List;

import library.User;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test for ServerToClientPacket.
 * @author seojin
 *
 */
public class ServerToClientPacketTest extends ServerToClientPacket{
	
	/* PROTOCOL TO Test
	Server to client
	Packet ::= AdministrativePacket | ConversationalPacket
	AdministrativePacket ::= acceptLogin | wholeUserList
	acceptLogin ::= clientID
	wholeUserList ::= (user \n)*
	ConversationalPacket ::= ConversationID  \t  actionType  \t  clientID  \n  (Message | screenName | userList)?
	actionType ::= OthersOpenConversation | OthersExitConversation | sendMessage | Invitation | screenNameChange
	userList ::= (user \n)*
	user ::= clientID \t screenName
	**clientID specifies who's source of event.
	**screenNameChange is followed by screenName
	**userList comes after Invitation.
	 */
	/**
	 * Admin type packet test
	 */
	@Test
	public void AdminTest(){
		Admin.AcceptLogin p;
		Admin.WholeUserList pp;
		ServerToClientPacket p2;
		p = new Admin.AcceptLogin(111);
		System.out.print(p.packetToText());
		p2 = ServerToClientPacket.parsePacket(p.packetToText());
		Assert.assertTrue(p.packetToText().equals(p2.packetToText()));
		List<User> uList = new ArrayList<User>();
		uList.add(new User(212, "Eugene"));
		uList.add(new User(213, "Mehmet"));
		pp = new Admin.WholeUserList(uList);
		System.out.print(pp.packetToText());
		p2 = ServerToClientPacket.parsePacket(pp.packetToText());
		Assert.assertTrue(pp.packetToText().equals(p2.packetToText()));
		
	}
	/**
	 * Conversation type Test.
	 */
	@Test
	public void ConvTest(){
		Conv p;
		ServerToClientPacket p2;
		List<User> uList = new ArrayList<User>();
		uList.add(new User(212, "Eugene"));
		p = new Conv(1111, SCActionType.Invitation, 212, uList);
		System.out.print(p.packetToText());
		p2 = ServerToClientPacket.parsePacket(p.packetToText());
		Assert.assertTrue(p.packetToText().equals(p2.packetToText()));

		p = new Conv(1111, SCActionType.screenNameChange, 212, "Egin", false);
		System.out.print(p.packetToText());
		p2 = ServerToClientPacket.parsePacket(p.packetToText());
		Assert.assertTrue(p.packetToText().equals(p2.packetToText()));
		
		p = new Conv(1111, SCActionType.sendMessage, 212, "HI all of u guys !! \nhihihi", true);
		System.out.print(p.packetToText());
		p2 = ServerToClientPacket.parsePacket(p.packetToText());
		Assert.assertTrue(p.packetToText().equals(p2.packetToText()));
		
		p = new Conv(1111, SCActionType.OthersJoinConversation, 212, "Egin", false);
		System.out.print(p.packetToText());
		p2 = ServerToClientPacket.parsePacket(p.packetToText());
		Assert.assertTrue(p.packetToText().equals(p2.packetToText()));
		
		p = new Conv(1111, SCActionType.OthersExitConversation, 212, "Egin", false);
		System.out.print(p.packetToText());
		p2 = ServerToClientPacket.parsePacket(p.packetToText());
		Assert.assertTrue(p.packetToText().equals(p2.packetToText()));
		
	}
}
