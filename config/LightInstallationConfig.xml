<!---All configuration items contain a "Class" tag specifying the python class they represent, and an "Args" tag specifying the args to be passed in.-->
<LightInstallation>
    <PixelConfiguration>
        <PixelStrip>
            <Class>layouts.ZigzagLayout</Class><!--Name of Layout Class,
            imported dynamically via a eval('import ' + name)-->
            <Args><!--Any args the layout class needs.  This go as
            elements of a dictionary that gets passed to the Layout machinery-->
                <Id>strip1</Id>
                <zigLength>25</zigLength>
                <zigAxis>X</zigAxis>
                <yDirection>-1</yDirection>
                <pixelToPixelSpacing>12</pixelToPixelSpacing>
                <spacing>12</spacing> <!--we can space at any value less the
                l2lspacing--> 
                <numPixels>50</numPixels>
                <originLocation>(10,20)</originLocation>
            </Args>
        </PixelStrip>
        <PixelStrip>
            <Class>layouts.ZigzagLayout</Class>
            <Args>
                <Id>strip2</Id>
                <zigLength>25</zigLength>
                <zigAxis>X</zigAxis>
                <yDirection>1</yDirection>
                <pixelToPixelSpacing>12</pixelToPixelSpacing>
                <spacing>12</spacing> 
                <numPixels>50</numPixels>
                <originLocation>(10,30)</originLocation>
            </Args>
        </PixelStrip>
    </PixelConfiguration>
    <!--<PixelMapperConfiguration>
        <PixelMapper>
            <Class>pixelmappers.SimpleMapper</Class>
            <Args>
                <Id>simplemap</Id>
            </Args>
        </PixelMapper>
    </PixelMapperConfiguration>-->
    <PixelMapperConfiguration>
        <PixelMapper>
            <Class>pixelmappers.GaussianMapper</Class>
            <Args>
                <Id>gaussmap</Id>
                <CutoffDist>30</CutoffDist>
                <Width>5</Width>
                <Height>1</Height>
            </Args>
        </PixelMapper>
    </PixelMapperConfiguration>
    <RendererConfiguration>
        <Renderer>
            <Class>renderers.PygameRenderer</Class>
            <Args>
                <Id>pygamerender</Id>
                <displaySize>(1300,50)</displaySize>
            </Args>
        </Renderer>
        <Renderer>
            <Class>renderers.IndoorRenderer</Class>
            <Args>
                <Id>indoorRenderer</Id>
                <PowerSupply>
                    <IP>10.1.218.72</IP>
                    <PortMapping>{'strip1':1, 'strip2':2}</PortMapping>
                </PowerSupply>
            </Args>
        </Renderer>
    </RendererConfiguration>
    <InputConfiguration>
        <InputElement>
            <Class>inputs.PygameInput</Class>
            <Args><!--Passed as a dictionary-->
                <Id>pygame</Id>
                <RefreshInterval>100</RefreshInterval>
            </Args>
        </InputElement>
        <!--<InputElement>
            <Class>inputs.PygameInput</Class>
            <Args>
                <Id>followmouse</Id>
                <RefreshInterval>100</RefreshInterval>
                <FollowMouse>True</FollowMouse>
            </Args>
        </InputElement>-->
        <InputElement>
            <Class>inputs.UDPInput</Class>
            <Args>
                <Id>UDP</Id>
                <Port>6038</Port>
                <RefreshInterval>100</RefreshInterval>
            </Args>
        </InputElement>
    </InputConfiguration>
    <BehaviorConfiguration>
        <Behavior>
            <Class>behaviors.EchoBehavior</Class>
            <Args>
                <Id>echo</Id>
                <z-index>0</z-index>
                <RenderToScreen>False</RenderToScreen>
                <Inputs>
                </Inputs>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.ColorChangerBehavior</Class>
            <Args>
                <Id>colorchange</Id>
                <z-index>0</z-index>
                <RenderToScreen>False</RenderToScreen>
                <Inputs>
                    <Id>pygame</Id>
                </Inputs>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.DecayBehavior</Class>
            <Args>
                <Id>decay</Id>
                <DecayType>Exponential</DecayType>
                <Coefficient>.001</Coefficient>
                <z-index>0</z-index>
                <RenderToScreen>False</RenderToScreen>
                <Inputs>
                </Inputs>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.DebugBehavior</Class>
            <Args>
                <Id>debug</Id>
                <z-index>0</z-index>
                <Inputs>
                    <Id>pygame</Id>
                </Inputs>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.RecursiveDecay</Class>
            <Args>
                <Id>recursivedecay</Id>
                <InitialResponseCount>20000</InitialResponseCount>
            </Args>
        </Behavior>
        <Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>
                <Id>runcolordecay</Id>
                <Inputs>
                    <Id>pygame</Id>
                </Inputs>
                <ChainedBehaviors>
                    <Id>colorchange</Id>
                    <Id>running</Id>
                    <Id>decay</Id>
                </ChainedBehaviors>
                <RecursiveHooks>{'running':'recursivedecay'}</RecursiveHooks>
                <RenderToScreen>True</RenderToScreen>
            </Args>
        </Behavior>
        <!--<Behavior>
            <Class>behaviors.BehaviorChain</Class>
            <Args>
                <Id>mousechaser</Id>
                <Inputs>
                    <Id>followmouse</Id>
                </Inputs>
                <ChainedBehaviors>
                    <Id>echo</Id>
                    <Id>colorchange</Id>
                    <Id>decay</Id>
                </ChainedBehaviors>
                <RenderToScreen>True</RenderToScreen>
            </Args>
        </Behavior>-->
        <Behavior>
            <Class>behaviors.RunningBehavior</Class>
            <Args>
                <Id>running</Id>
                <Inputs>
                    <Id>pygame</Id>
                </Inputs>
                <StepSize>10</StepSize>
                <RenderToScreen>False</RenderToScreen>
            </Args>
        </Behavior>
    </BehaviorConfiguration>
</LightInstallation>
